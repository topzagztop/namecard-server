// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  firstName    String        @map("first_name")
  lastName     String        @map("last_name")
  jobPosition  String        @map("job_position")
  phone        String
  profileImage String?       @map("profile_image")
  role         Role          @default(USER)
  namecards    NameCard[]
  ContactList  ContactList[]

  @@map("user")
}

model NameCard {
  id              Int          @id @default(autoincrement())
  businessName    String       @map("bussiness_name")
  position        String
  businessTel     String       @map("business_tel")
  businessEmail   String       @map("business_email")
  logo            String
  businessProfile String       @map("business_profile")
  website         String?
  slug            String       @unique
  qrcode          String       @map("qrcode") @db.Text
  createdAt       DateTime     @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt       DateTime     @updatedAt @map("updated_at") @db.Timestamp(0)
  userId          Int          @map("user_id")
  user            User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  themeId         Int          @map("theme_id")
  theme           Theme        @relation(fields: [themeId], references: [id], onDelete: Cascade)
  socialLinked    SocialLink[]
  Contact         Contact[]

  @@map("name_card")
}

model SocialLink {
  id         Int      @id @default(autoincrement())
  socialName String?  @map("social_name")
  url        String?
  namecardId Int      @map("namecard_id")
  namecard   NameCard @relation(fields: [namecardId], references: [id], onDelete: Cascade)

  @@map("social_link")
}

model Contact {
  id          Int           @id @default(autoincrement())
  namecardId  Int           @map("namecard_id")
  namecard    NameCard      @relation(fields: [namecardId], references: [id], onDelete: Cascade)
  contactList ContactList[]

  @@map("contact")
}

model ContactList {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  userId    Int      @map("user_id")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  contactId Int      @map("contact_id")
  contacts  Contact  @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@map("contact_list")
}

model Theme {
  id        Int        @id @default(autoincrement())
  themeName String     @map("theme_name")
  namecard  NameCard[]

  @@map("theme")
}
